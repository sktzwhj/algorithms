'''
Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.
'''
'''
Basicly, the problem can be solved like the followings. Firstly, we reverse the string, then we find the longest common substring of the two strings. 
It is noteworthy that we need to check the index of the common substring in the reversed string. It is because there is possibility that the reversed 
version of the string exists somewhere else. 
'''

class Solution(object):
    def find_lcsubstr(self,s1, s2):
        m = [[0 for i in range(len(s2) + 1)] for j in range(len(s1) + 1)]
        mmax = 0
        p = 0
        for i in range(len(s1)):
            for j in range(len(s2)):
                if s1[i] == s2[j]:
                    m[i + 1][j + 1] = m[i][j] + 1
                    if m[i + 1][j + 1] >= mmax :
                        mmax = m[i + 1][j + 1]
                        p = i + 1


        return s1[p - mmax:p], p



    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """

        reversed_string = s[::-1]
        candidate_palindrome, index = self.find_lcsubstr(s,reversed_string)
        if s.index(candidate_palindrome) == len(s) - reversed_string.index(candidate_palindrome) - len(candidate_palindrome):
            return candidate_palindrome

        return s[0]


solution = Solution()
a
print solution.find_lcsubstr(a,a,set())
print solution.longestPalindrome